fun create_sieve(size) {
    let sieve = [true] * size;
    sieve[0] = sieve[1] = false;
    for (i from 2 to size) {
        if (not sieve[i]) continue;
        for (j from i * 2 to size step i) {
            sieve[j] = false;
        }
    }
    return sieve;
}

fun get_primes(sieve) {
    let primes = [];
    for (i from 0 to size(sieve)) {
        if (sieve[i]) {
            primes += i;
        }
    }
    return primes;
}

fun create_string(primes) {
    let output = "";
    for (i from 0 to size(primes)) {
        output += "Number " + primes[i] + " is prime\n";
    }
    return output;
}

fun main() {
    let user_input = number(input("Please, provide sieve size: "));
    let sieve = create_sieve(user_input);
    let primes = get_primes(sieve);
    let stringified = create_string(primes);
    if (not write("primes.txt", stringified)) {
        echo "Failed to write to a file";
    }
}

main();